<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="retryBttn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAApESURBVHhe7V1njBVVFF52wQ64796Zt4sbsaAYW2JP1MQS
        o+gPe+8laIzYawgSLIkKxMSgQewUa2JXNHYTSxQM/jCiiWIUIWoMLKtGxQX9zrwjYeedmTcz986b2bf3
        S74EeHO+28u5jTYHBwcHBwcHBwcHBwcHh0GD0aNHb12tVPb3fXW256nrwGm+1jM8T88h1v6sptFv9A19
        SzZs7mCIDspQZO5Nvlave1r97Hv63ywMbLV6DVo3kiZp14JwaIQOrfXRyLgnkJFrwhlrkb1oUY97njeB
        wqwF7bAB1Wp1O2TQTN9TK4XMy5kIE11dV9fWYzk6Qxe+7++ADLkHXcpfcmY1lWtRMPOUUrtw9IYO0C11
        e1rPRyasC2VKGbgOBTMX3VkXR7el0Y7EXoxE94YyoYzsRVyvRJxbc4xBVzAe3dNnQsLLzsVo0TtzMloD
        aP4nI2GDoVXI1Oo3X6mzODmDF7u2tW2CKeyDYiIHIcn5pDRx8gYXMJXdkpwxKWGDmSiUtyuVyihO5uBA
        z6hRFcyiPpIS1CJchArnc3LLja6uLg8RXhpKQCtyKaWVk11OdHd3b9HiLSPMRZg9juTklw4jaBFQiHRL
        k8aUcePGbcp5UB5gNvWQFOGhQKT9Ac6GcqCq9WlSRE3oafUn+C26wDdpuklL555XOdf3K0fwGlgBC5Ex
        9NXZnB3FAl7sTohQlqXyVeBiZOwzvtZ30jIFHMhToLdPo00lzHC2D2kVTziPZViY7Ei1HKL1ZF7mHl4z
        zwZ4zWeK+jFEC3uSVgzQ2t6VfrfExYhecWtfqM1XCJGK4+pqtXN3Ns8MFOy9gnY80dWxOcX7kLxmg+hW
        J3EwzQUS1Y0IZOmqfuzu7NyWZTIB3cMSQTeSaBXfw6y9Zr0Bw1CwE/H76vD3huwtZOme9zOkCDUkMujL
        MWNGKpZKBZr3Q6M/rBlHdFe3sXkdeLfyE8kuM7Wey/LNQW0p3XBzSasPyZFkycQIZlmSXjTX08SDzUXU
        FkH144JtVvYjzOYt2SMzHxUikZ5az2LJxIDNVFErgjRWsGkjDKPtZEkjE7V6hHXzBTVxBLi2LgIpCR/j
        F5q+smxiIKFpVwNoS/ZZ1Ni9WCIOw9BS7hc0snBtUw5OIMIzhcBTERp/Y+A7mCXToB32WTe61tPUl1ai
        WSsKHRkKXabWM1gzNwy34iFrPYX1UgEe+p6iXjouryp1OEuKgGPaiRa8TLBNyxWQy88vQbM/Rgg0HbX6
        HFIjaorpgBp+qaiZnv3wF85jWRFowQfRdyG71EQ4R7KkfVCTlwJNwfVdSu3HcqmBljVP0MzKxoWi9WzB
        LhXRPS9gOetAd2V2UAEJfIG1IhFMqX1/D/7rAKB1fSPpGnDdxh58GLzZZno4YxWk7HdbwalzOcCkJH8g
        dqZDi4oYo77Gt3XePHm/IT1LVCvjdv7IqZTtkhOVbF+WswdE7CYpsORU77NUJNACNvg3aOoDvHl0LycO
        1LNHtNznOZg60N45bQWEbdIQeXc9y9mD8VRQ64ksJQIzn0Px3fqNbcip+9+btzHdjmO1WjkgiIgAVKZn
        JJvkVAtZyh5QS36SA2tM8jtoKslSIlDgH8i26mX8PJwKR/rdHtWrtZjUw/fVcbJNUqqVLGUHtb5dCigp
        47srjA8HynZMOvzchBPyUetP6La2pEol2SSl1bNc1JylQJIStfwWlhKBxM6R7JpOpa7lKNWBKpVok5Am
        0/06IEPPkQJJTL9yAkuJwDfL62wKICrGuxylOiAP7pZsEtPm2WCqOWIgCRm314ym3CPZFEHqFhGl8EZW
        AHSr50s2ian11SxlDtSOaWIgCYnEbMVSdcBvdDJetCuCqCDbcNQGgNa/pO8TU+upLGUOkykn17pIIKJX
        SnZFkSYYHLUB6KpUdpW+T0rKQ5Yyh+Gg28syIlAgUwSbwoiZ1tEctQHgfSDRJgkpD1nKHIYF0scyIlAg
        dwg2hREFcghHbQBMxzrbBWLiJf8DCXGgJGB8ul6wKYxR01PyUaTvk5LykKXMYTqoxy3e5XEM1YSYEY7h
        qA2A8eKqzUHdwrQ3crXT1Om0zOUcrTpgsD9F+D45LU97jRxDJOYClpIwAt/YPqyWiZ7Wz3Gc6mA8+bDp
        GFporvexlAjfU0+Ldk1mXMXBGPCiZJOUVvdEzBcX9VKWElGScWQNLSJylMJoR+v5VbBJTOsXRU2W34mo
        fTuylIThOWzPpiIyfDbHpQ6IOx14EO2S0fLyO8HCBlXsLAO/08Fn2TZ/9kUtmRCQoYYnGvPYoPLUjXJg
        yYgWtgwycZv9NLgvDts1g0jbdRyHOvT09Gxu2l2Rr8Vy9mDhkAN1WyexnAgMfONRcL9LtnkRmf0xgo48
        J4bx7SLJLg3hVO7DclbRAXGzIzFaLYFOpNdO8OgeYWhvPS+i8L/zfb/KQdchOBVvfoIxn2NABDQ9enpP
        CjQxG/gkATBnvwTf5looyOhfqtXO3ThIERjXjFei0QLns5x9IDMnSIGmYS0jGj9LQYM85v5G+9hRRCZ9
        gTjEnrznxUTjdx9zPUoK0CVP48PWyBA6BzWsJhkN9L174/uvwvYmRCt/KoFP0G48q6wx38PWBNTcGULA
        qYmMuYElY1E78RGcHjSqrUGraHDq/X8gjTdLGqmp9XSWzA90CQWBGV/YAft9Xx3Psg1B57qQQLo9leZh
        m3+CJQ+ljoVEoqvYvGpg4y3ItaaXWxMDzdnKlTaMJ39l6WMxlo0DL0cBzUIX+gq0yH+hRwjeQwG8hBZ1
        KxVC2td60EUeY2/cUg+zbP7gzRrjuxNEKhToncrShQEt43SLkwi69Bl70dQ6UDtt3tVYh1o9DbKxPkpO
        aEfYtyMO9qbZWj/G2s0Dugy6HmD1YUsMvG/RYQIOInfQIzZoFbaf2lgd52zmiqAflyOVmejCfqcZ2Nix
        YzfjYKyD1qdQiydTWFIcTIi4X8bBFAJaTslrQXA5BvxJyuKLbaSFgrgKreIHITwbXIRg8vU7GoEH+L5Q
        xGxyDWrdg2iNR2V5opVsaq8/qIehZbWLDbGv6QN5FDDFTP1cUhaii/kDtfsd1PK7kPgLg+OddFWaHjQD
        aW0K/3YYWtZ59A3GpDfIRtKyTZqlcXaUA8ioclwpKIAo+MjdxiJBj2C23MPJjUgzw1I+gkkYas/Eolf4
        FGNb5Mn+UoDvdruHlMsE99R4CUHL5q04ptCYYdM3air4pbaWmX3xbCrTwzmlAga+k5CgPJ2yvNkHv+YM
        Tk5rgD36Qs5dGXJRaTzwHNBOx3zQ9I0OnjWJq9EqWvc/BdsYwdK91nORaCubXJbZH+yIFrWEXiToKI5f
        vv9YcjxHb+giODhRO82yIpRJzeAKhD29aQcSBhk6aJkdU+UFyCj63xOkDLTBVRjH5vMBi9YfIyyhA93H
        vl5wS1ctBA0O6JGtWkhamDHRwWdXCDZAJw6pkOi+HrqZa8Cp1N2Q8xk4oPgz/9s1tEdD31q/ueTg4ODg
        4ODg4ODg4ODgkB/a2v4DxhTVSWV3LzoAAAAASUVORK5CYII=
</value>
  </data>
</root>