<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="retryBttn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /gPGFNVJZXcvOgAAAABJRU5ErkJggg==
</value>
  </data>
</root>