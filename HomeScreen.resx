<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="exitBttn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>