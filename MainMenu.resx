<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="playButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>