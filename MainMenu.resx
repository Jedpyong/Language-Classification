<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="playButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>